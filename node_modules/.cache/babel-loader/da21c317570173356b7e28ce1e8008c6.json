{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bryange/Documents/Websites/bryange3.github.io/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSpring, animated } from 'react-spring';\nimport CardInfo from '../components/CardInfo.js'; // Animation code derived from https://codesandbox.io/embed/rj998k4vmm\n\nconst calc = (x, y) => [-(y - window.innerHeight / 2) / 100, (x - window.innerWidth / 2) / 100, 1.05];\n\nconst trans = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`;\n\nfunction Card(props) {\n  _s();\n\n  const [springProps, set] = useSpring(() => ({\n    xys: [0, 0, 1],\n    config: {\n      mass: 5,\n      tension: 350,\n      friction: 40\n    }\n  }));\n  let elem = document.querySelector('Link');\n  let rect = elem.getBoundingClientRect();\n  const minX = rect.left;\n  const minY = rect.top;\n  return /*#__PURE__*/_jsxDEV(Link, {\n    className: \"d-inline-block project-card\",\n    to: props.item.path,\n    style: {\n      textDecoration: 'none',\n      color: 'black'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(animated.img, {\n      class: \"project-card-image\",\n      onMouseMove: ({\n        clientX: x,\n        clientY: y\n      }) => set({\n        xys: calc(x - minX, y - minY)\n      }),\n      onMouseLeave: () => set({\n        xys: [0, 0, 1]\n      }),\n      style: {\n        transform: springProps.xys.interpolate(trans)\n      },\n      src: props.item.imgSrc,\n      alt: props.item.imgSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardInfo, {\n      title: props.item.title,\n      subTitle: props.item.subTitle,\n      roles: props.item.roles,\n      path: props.item.path\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Card, \"+xqLWFff2oiU7fi4EfSpyrWtUFo=\", false, function () {\n  return [useSpring];\n});\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/bryange/Documents/Websites/bryange3.github.io/src/components/Card.js"],"names":["React","Link","useSpring","animated","CardInfo","calc","x","y","window","innerHeight","innerWidth","trans","s","Card","props","springProps","set","xys","config","mass","tension","friction","elem","document","querySelector","rect","getBoundingClientRect","minX","left","minY","top","item","path","textDecoration","color","clientX","clientY","transform","interpolate","imgSrc","title","subTitle","roles"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSpring, animated } from 'react-spring'\n\nimport CardInfo from '../components/CardInfo.js';\n\n// Animation code derived from https://codesandbox.io/embed/rj998k4vmm\nconst calc = (x, y) => [-(y - window.innerHeight / 2) / 100, (x - window.innerWidth / 2) / 100, 1.05]\nconst trans = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\n\nfunction Card(props) {\n    const [springProps, set] = useSpring(() => ({ xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 40 } }));\n\n    let elem = document.querySelector('Link');\n    let rect = elem.getBoundingClientRect();\n    const minX = rect.left;\n    const minY = rect.top;\n    \n    return (\n        <Link className=\"d-inline-block project-card\" to={props.item.path} style={{ textDecoration: 'none', color: 'black'}}>\n            <div>\n                \n            </div>\n            <animated.img\n                class=\"project-card-image\"\n                onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x - minX, y - minY) })}\n                onMouseLeave={() => set({ xys: [0, 0, 1] })}\n                style={{ transform: springProps.xys.interpolate(trans) }}\n                src={props.item.imgSrc}\n                alt={props.item.imgSrc}\n            />\n            <CardInfo title={props.item.title} subTitle={props.item.subTitle} roles={props.item.roles} path={props.item.path} />\n        </Link>\n    );\n}\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}