{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = find;\nvar basicSelectors = {};\n\nif (typeof document !== 'undefined') {\n  basicSelectors.body = document.body;\n  basicSelectors.window = window;\n  basicSelectors.document = document;\n}\n\nvar matchesMethodName = function () {\n  if (typeof document !== 'undefined' && document.body) {\n    var body = document.body;\n    return typeof body.matches === 'function' ? 'matches' : // $FlowFixMe - flow doesn't like vendors, so do I, but we have to support such case\n    typeof body.webkitMatchesSelector === 'function' ? 'webkitMatchesSelector' : //webkit\n    // $FlowFixMe - see above\n    typeof body.mozMatchesSelector === 'function' ? 'mozMatchesSelector' : //mozilla\n    // $FlowFixMe - see above\n    typeof body.msMatchesSelector === 'function' ? 'msMatchesSelector' : //ie\n    // $FlowFixMe - see above\n    typeof body.oMatchesSelector === 'function' ? 'oMatchesSelector' : //old opera\n    null;\n  }\n\n  return null;\n}();\n\nfunction find(selector, el) {\n  if (!selector) {\n    return null;\n  }\n\n  if (basicSelectors.hasOwnProperty(selector)) {\n    return basicSelectors[selector];\n  } // select by id\n\n\n  if (selector[0] === '#') {\n    return document.getElementById(selector.slice(1));\n  }\n\n  if (matchesMethodName === null) {\n    return null;\n  }\n\n  var temp = el; // eslint-disable-next-line no-cond-assign\n\n  while (temp = temp.parentElement) {\n    // $FlowFixMe - flow does not approve it, but it works fine :)\n    if (temp[matchesMethodName](selector)) {\n      return temp || null;\n    }\n  } // nothing has been found :(\n\n\n  return null;\n}\n\nmodule.exports = exports.default;","map":null,"metadata":{},"sourceType":"script"}