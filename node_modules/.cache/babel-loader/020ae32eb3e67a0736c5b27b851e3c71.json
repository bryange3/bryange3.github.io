{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bryange/Documents/Websites/bryange3.github.io/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSpring, animated } from 'react-spring';\nimport CardInfo from '../components/CardInfo.js'; // Animation code derived from https://codesandbox.io/embed/rj998k4vmm\n\nconst calc = (x, y) => [-(y - window.innerHeight / 2) / 100, (x - window.innerWidth / 2) / 100, 1.05];\n\nconst trans = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`;\n\nfunction getCoords(event) {\n  var elementX = event.clientX;\n  var elementY = event.clientY;\n  return {\n    clientX: elementX,\n    clientY: elementY\n  };\n}\n\nfunction getX(event) {\n  return event.clientX;\n}\n\nfunction getY(event) {\n  return event.clientY;\n}\n\nfunction logKey(e) {\n  screenLog.innerText = `\n    Screen X/Y: ${e.screenX}, ${e.screenY}\n    Client X/Y: ${e.clientX}, ${e.clientY}`;\n}\n\nfunction Card(props) {\n  _s();\n\n  const [springProps, set] = useSpring(() => ({\n    xys: [0, 0, 1],\n    config: {\n      mass: 5,\n      tension: 350,\n      friction: 50\n    }\n  }));\n  let screenLog = document.querySelector('#screen-log');\n  document.addEventListener('mousemove', logKey);\n  return /*#__PURE__*/_jsxDEV(Link, {\n    className: \"d-inline-block project-card\",\n    to: props.item.path,\n    style: {\n      textDecoration: 'none',\n      color: 'black'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(animated.img, {\n        id: \"image\",\n        class: \"project-card-image\",\n        onMouseMove: ({\n          clientX: x,\n          clientY: y\n        }) => set({\n          xys: calc(x, y)\n        }),\n        onMouseLeave: () => set({\n          xys: [0, 0, 1]\n        }),\n        style: {\n          transform: springProps.xys.interpolate(trans)\n        },\n        src: props.item.imgSrc,\n        alt: props.item.imgSrc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Move your mouse to see its position.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"screen-log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardInfo, {\n      title: props.item.name,\n      subTitle: props.item.description,\n      roles: props.item.roles,\n      path: props.item.path\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Card, \"+xqLWFff2oiU7fi4EfSpyrWtUFo=\", false, function () {\n  return [useSpring];\n});\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/bryange/Documents/Websites/bryange3.github.io/src/components/Card.js"],"names":["React","Link","useSpring","animated","CardInfo","calc","x","y","window","innerHeight","innerWidth","trans","s","getCoords","event","elementX","clientX","elementY","clientY","getX","getY","logKey","e","screenLog","innerText","screenX","screenY","Card","props","springProps","set","xys","config","mass","tension","friction","document","querySelector","addEventListener","item","path","textDecoration","color","transform","interpolate","imgSrc","name","description","roles"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSpring, animated } from 'react-spring'\n\nimport CardInfo from '../components/CardInfo.js';\n\n// Animation code derived from https://codesandbox.io/embed/rj998k4vmm\nconst calc = (x, y) => [-(y - window.innerHeight / 2) / 100, (x - window.innerWidth / 2) / 100, 1.05]\nconst trans = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\n\nfunction getCoords(event) {\n    var elementX = event.clientX;\n    var elementY = event.clientY;\n    return { clientX: elementX, clientY: elementY };\n}\n\nfunction getX(event) {\n    return event.clientX;\n}\n\nfunction getY(event) {\n    return event.clientY;\n}\n\nfunction logKey(e) {\n  screenLog.innerText = `\n    Screen X/Y: ${e.screenX}, ${e.screenY}\n    Client X/Y: ${e.clientX}, ${e.clientY}`;\n}\n\nfunction Card(props) {\n    const [springProps, set] = useSpring(() => ({ xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 50 } }));\n    let screenLog = document.querySelector('#screen-log');\n    document.addEventListener('mousemove', logKey);\n    \n    return (\n        <Link className=\"d-inline-block project-card\" to={props.item.path} style={{ textDecoration: 'none', color: 'black'}}>\n            <div>\n                <animated.img\n                    id=\"image\"\n                    class=\"project-card-image\"\n                    onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n                    onMouseLeave={() => set({ xys: [0, 0, 1] })}\n                    style={{ transform: springProps.xys.interpolate(trans) }}\n                    src={props.item.imgSrc}\n                    alt={props.item.imgSrc}\n                />\n                <p>Move your mouse to see its position.</p>\n                <p id=\"screen-log\"></p>\n            </div>\n            <CardInfo title={props.item.name} subTitle={props.item.description} roles={props.item.roles} path={props.item.path} />\n        </Link>\n    );\n}\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}