{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bryange/Documents/react-portfolio/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSpring, animated } from 'react-spring';\nimport CardInfo from '../components/CardInfo.js'; // Animation code derived from https://codesandbox.io/embed/rj998k4vmm\n// const calc = (x, y) => [-(y - window.innerHeight / 2) / 100, (x - window.innerWidth / 2) / 100, 1.05]\n\nconst trans = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`;\n\nfunction Card(props) {\n  _s();\n\n  const [springProps, set] = useSpring(() => ({\n    xys: [0, 0, 1],\n    config: {\n      mass: 5,\n      tension: 400,\n      friction: 20\n    }\n  }));\n  return /*#__PURE__*/_jsxDEV(Link, {\n    className: \"d-inline-block project-card\",\n    to: props.item.path,\n    style: {\n      textDecoration: 'none',\n      color: 'black'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-card-left\",\n      children: [/*#__PURE__*/_jsxDEV(animated.img, {\n        id: \"image\",\n        class: \"project-card-image\" // onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n        // onMouseMove={() => set({ xys: [0, 0, 1.04] })}\n        // onMouseLeave={() => set({ xys: [0, 0, 1] })}\n        ,\n        style: {\n          transform: springProps.xys.interpolate(trans)\n        },\n        src: props.item.imgSrc,\n        alt: props.item.imgSrc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-card-right\",\n      children: [/*#__PURE__*/_jsxDEV(CardInfo, {\n        projectTitle: props.item.projectTitle,\n        subTitle: props.item.description,\n        roles: props.item.roles,\n        path: props.item.path,\n        type: props.item.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 14\n  }, this);\n}\n\n_s(Card, \"+xqLWFff2oiU7fi4EfSpyrWtUFo=\", false, function () {\n  return [useSpring];\n});\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/bryange/Documents/react-portfolio/src/components/Card.js"],"names":["React","Link","useSpring","animated","CardInfo","trans","x","y","s","Card","props","springProps","set","xys","config","mass","tension","friction","item","path","textDecoration","color","transform","interpolate","imgSrc","projectTitle","description","roles","type"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AAEA,OAAOC,QAAP,MAAqB,2BAArB,C,CAEA;AACA;;AACA,MAAMC,KAAK,GAAG,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAc,8BAA6BF,CAAE,gBAAeC,CAAE,cAAaC,CAAE,GAA3F;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,QAAM,CAACC,WAAD,EAAcC,GAAd,IAAqBV,SAAS,CAAC,OAAO;AAAEW,IAAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAP;AAAkBC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,OAAO,EAAE,GAApB;AAAyBC,MAAAA,QAAQ,EAAE;AAAnC;AAA1B,GAAP,CAAD,CAApC;AAEA,sBAAS,QACL,IADK;AACA,IAAA,SAAS,EAAG,6BADZ;AAEL,IAAA,EAAE,EAAKP,KAAK,CAACQ,IAAN,CAAWC,IAFb;AAGL,IAAA,KAAK,EACD;AAAEC,MAAAA,cAAc,EAAE,MAAlB;AAA0BC,MAAAA,KAAK,EAAE;AAAjC,KAJC;AAAA,4BAML;AACI,MAAA,SAAS,EAAG,mBADhB;AAAA,8BAEA,QACA,QADA,CACS,GADT;AACa,QAAA,EAAE,EAAG,OADlB;AAEA,QAAA,KAAK,EAAG,oBAFR,CAGA;AACA;AACA;AALA;AAMA,QAAA,KAAK,EACD;AAAEC,UAAAA,SAAS,EAAEX,WAAW,CAACE,GAAZ,CAAgBU,WAAhB,CAA4BlB,KAA5B;AAAb,SAPJ;AASA,QAAA,GAAG,EAAKK,KAAK,CAACQ,IAAN,CAAWM,MATnB;AAUA,QAAA,GAAG,EAAKd,KAAK,CAACQ,IAAN,CAAWM;AAVnB;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YANK,oBAoBC;AACF,MAAA,SAAS,EAAG,oBADV;AAAA,8BAEN,QACA,QADA;AACS,QAAA,YAAY,EAAKd,KAAK,CAACQ,IAAN,CAAWO,YADrC;AAEA,QAAA,QAAQ,EAAKf,KAAK,CAACQ,IAAN,CAAWQ,WAFxB;AAGA,QAAA,KAAK,EAAKhB,KAAK,CAACQ,IAAN,CAAWS,KAHrB;AAIA,QAAA,IAAI,EAAKjB,KAAK,CAACQ,IAAN,CAAWC,IAJpB;AAKA,QAAA,IAAI,EAAKT,KAAK,CAACQ,IAAN,CAAWU;AALpB;AAAA;AAAA;AAAA;AAAA,cAFM;AAAA;AAAA;AAAA;AAAA;AAAA,YApBD;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AAgCH;;GAnCQnB,I;UACsBP,S;;;KADtBO,I;AAqCT,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSpring, animated } from 'react-spring'\n\nimport CardInfo from '../components/CardInfo.js';\n\n// Animation code derived from https://codesandbox.io/embed/rj998k4vmm\n// const calc = (x, y) => [-(y - window.innerHeight / 2) / 100, (x - window.innerWidth / 2) / 100, 1.05]\nconst trans = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\n\nfunction Card(props) {\n    const [springProps, set] = useSpring(() => ({ xys: [0, 0, 1], config: { mass: 5, tension: 400, friction: 20 } }));\n\n    return ( <\n        Link className = \"d-inline-block project-card\"\n        to = { props.item.path }\n        style = {\n            { textDecoration: 'none', color: 'black' }\n        } >\n        <\n        div className = \"project-card-left\" >\n        <\n        animated.img id = \"image\"\n        class = \"project-card-image\"\n        // onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n        // onMouseMove={() => set({ xys: [0, 0, 1.04] })}\n        // onMouseLeave={() => set({ xys: [0, 0, 1] })}\n        style = {\n            { transform: springProps.xys.interpolate(trans) }\n        }\n        src = { props.item.imgSrc }\n        alt = { props.item.imgSrc }\n        /> < /\n        div > <\n        div className = \"project-card-right\" >\n        <\n        CardInfo projectTitle = { props.item.projectTitle }\n        subTitle = { props.item.description }\n        roles = { props.item.roles }\n        path = { props.item.path }\n        type = { props.item.type }\n        /> < /\n        div > <\n        /Link>\n    );\n}\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}