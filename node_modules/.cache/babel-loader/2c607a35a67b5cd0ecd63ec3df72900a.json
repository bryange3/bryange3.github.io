{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _renderPropsVersion = _interopRequireDefault(require(\"./render-props-version\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction Sticky(props) {\n  var mode = props.mode,\n    onFixedToggle = props.onFixedToggle,\n    hideOnBoundaryHit = props.hideOnBoundaryHit,\n    offsetTransforms = props.offsetTransforms,\n    disabled = props.disabled,\n    boundaryElement = props.boundaryElement,\n    scrollElement = props.scrollElement,\n    bottomOffset = props.bottomOffset,\n    topOffset = props.topOffset,\n    positionRecheckInterval = props.positionRecheckInterval,\n    children = props.children,\n    isIOSFixEnabled = props.isIOSFixEnabled,\n    dontUpdateHolderHeightWhenSticky = props.dontUpdateHolderHeightWhenSticky,\n    wrapperClassName = props.wrapperClassName,\n    stickyClassName = props.stickyClassName,\n    stickyStyle = props.stickyStyle,\n    rest = _objectWithoutPropertiesLoose(props, [\"mode\", \"onFixedToggle\", \"hideOnBoundaryHit\", \"offsetTransforms\", \"disabled\", \"boundaryElement\", \"scrollElement\", \"bottomOffset\", \"topOffset\", \"positionRecheckInterval\", \"children\", \"isIOSFixEnabled\", \"dontUpdateHolderHeightWhenSticky\", \"wrapperClassName\", \"stickyClassName\", \"stickyStyle\"]);\n  return /*#__PURE__*/_react.default.createElement(_renderPropsVersion.default, {\n    mode: mode,\n    onFixedToggle: onFixedToggle,\n    hideOnBoundaryHit: hideOnBoundaryHit,\n    offsetTransforms: offsetTransforms,\n    disabled: disabled,\n    boundaryElement: boundaryElement,\n    scrollElement: scrollElement,\n    bottomOffset: bottomOffset,\n    topOffset: topOffset,\n    positionRecheckInterval: positionRecheckInterval,\n    isIOSFixEnabled: isIOSFixEnabled,\n    dontUpdateHolderHeightWhenSticky: dontUpdateHolderHeightWhenSticky\n  }, function (_ref) {\n    var isFixed = _ref.isFixed,\n      wrapperStyles = _ref.wrapperStyles,\n      wrapperRef = _ref.wrapperRef,\n      holderStyles = _ref.holderStyles,\n      holderRef = _ref.holderRef;\n    return /*#__PURE__*/_react.default.createElement(\"div\", _extends({}, rest, {\n      ref: holderRef,\n      style: holderStyles\n    }), /*#__PURE__*/_react.default.createElement(\"div\", _extends({}, rest, {\n      className: wrapperClassName + \" \" + (isFixed ? stickyClassName : ''),\n      style:\n      // $FlowFixMe - flow does not like when we merge 2 inexact objects\n      isFixed ? _extends({}, wrapperStyles, stickyStyle) : wrapperStyles,\n      ref: wrapperRef\n    }), children));\n  });\n}\nSticky.defaultProps = {\n  stickyClassName: 'sticky',\n  wrapperClassName: '',\n  stickyStyle: {}\n};\nvar _default = Sticky;\nexports.default = _default;\nmodule.exports = exports.default;","map":null,"metadata":{},"sourceType":"script"}