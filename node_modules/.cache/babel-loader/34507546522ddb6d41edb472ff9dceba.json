{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bryange/Documents/react-portfolio/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSpring, animated } from 'react-spring';\nimport CardInfo from '../components/CardInfo.js'; // Animation code derived from https://codesandbox.io/embed/rj998k4vmm\n// const calc = (x, y) => [-(y - window.innerHeight / 2) / 100, (x - window.innerWidth / 2) / 100, 1.05]\n\nconst trans = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`;\n\nfunction Card(props) {\n  _s();\n\n  const [springProps, set] = useSpring(() => ({\n    xys: [0, 0, 1],\n    config: {\n      mass: 5,\n      tension: 400,\n      friction: 20\n    }\n  }));\n  return /*#__PURE__*/_jsxDEV(Link, {\n    className: \"d-inline-block project-card\",\n    to: props.item.path,\n    style: {\n      textDecoration: 'none',\n      color: 'black'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(animated.img, {\n        id: \"image\",\n        class: \"project-card-image\" // onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n        // onMouseMove={() => set({ xys: [0, 0, 1.04] })}\n        // onMouseLeave={() => set({ xys: [0, 0, 1] })}\n        ,\n        style: {\n          transform: springProps.xys.interpolate(trans)\n        },\n        src: props.item.imgSrc,\n        alt: props.item.imgSrc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"float-right\",\n      children: /*#__PURE__*/_jsxDEV(CardInfo, {\n        projectTitle: props.item.projectTitle,\n        subTitle: props.item.description,\n        roles: props.item.roles,\n        path: props.item.path,\n        type: props.item.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Card, \"+xqLWFff2oiU7fi4EfSpyrWtUFo=\", false, function () {\n  return [useSpring];\n});\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/bryange/Documents/react-portfolio/src/components/Card.js"],"names":["React","Link","useSpring","animated","CardInfo","trans","x","y","s","Card","props","springProps","set","xys","config","mass","tension","friction","item","path","textDecoration","color","transform","interpolate","imgSrc","projectTitle","description","roles","type"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AAEA,OAAOC,QAAP,MAAqB,2BAArB,C,CAEA;AACA;;AACA,MAAMC,KAAK,GAAG,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAc,8BAA6BF,CAAE,gBAAeC,CAAE,cAAaC,CAAE,GAA3F;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,QAAM,CAACC,WAAD,EAAcC,GAAd,IAAqBV,SAAS,CAAC,OAAO;AAAEW,IAAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAP;AAAkBC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,OAAO,EAAE,GAApB;AAAyBC,MAAAA,QAAQ,EAAE;AAAnC;AAA1B,GAAP,CAAD,CAApC;AAEA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,6BAAhB;AAA8C,IAAA,EAAE,EAAEP,KAAK,CAACQ,IAAN,CAAWC,IAA7D;AAAmE,IAAA,KAAK,EAAE;AAAEC,MAAAA,cAAc,EAAE,MAAlB;AAA0BC,MAAAA,KAAK,EAAE;AAAjC,KAA1E;AAAA,4BACI;AAAA,6BACI,QAAC,QAAD,CAAU,GAAV;AACI,QAAA,EAAE,EAAC,OADP;AAEI,QAAA,KAAK,EAAC,oBAFV,CAGI;AACA;AACA;AALJ;AAMI,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAEX,WAAW,CAACE,GAAZ,CAAgBU,WAAhB,CAA4BlB,KAA5B;AAAb,SANX;AAOI,QAAA,GAAG,EAAEK,KAAK,CAACQ,IAAN,CAAWM,MAPpB;AAQI,QAAA,GAAG,EAAEd,KAAK,CAACQ,IAAN,CAAWM;AARpB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAaI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,YAAY,EAAEd,KAAK,CAACQ,IAAN,CAAWO,YAAnC;AAAiD,QAAA,QAAQ,EAAEf,KAAK,CAACQ,IAAN,CAAWQ,WAAtE;AAAmF,QAAA,KAAK,EAAEhB,KAAK,CAACQ,IAAN,CAAWS,KAArG;AAA4G,QAAA,IAAI,EAAEjB,KAAK,CAACQ,IAAN,CAAWC,IAA7H;AAAmI,QAAA,IAAI,EAAET,KAAK,CAACQ,IAAN,CAAWU;AAApJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GAtBQnB,I;UACsBP,S;;;KADtBO,I;AAwBT,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSpring, animated } from 'react-spring'\n\nimport CardInfo from '../components/CardInfo.js';\n\n// Animation code derived from https://codesandbox.io/embed/rj998k4vmm\n// const calc = (x, y) => [-(y - window.innerHeight / 2) / 100, (x - window.innerWidth / 2) / 100, 1.05]\nconst trans = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\n\nfunction Card(props) {\n    const [springProps, set] = useSpring(() => ({ xys: [0, 0, 1], config: { mass: 5, tension: 400, friction: 20 } }));\n\n    return (\n        <Link className=\"d-inline-block project-card\" to={props.item.path} style={{ textDecoration: 'none', color: 'black' }}>\n            <div>\n                <animated.img\n                    id=\"image\"\n                    class=\"project-card-image\"\n                    // onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n                    // onMouseMove={() => set({ xys: [0, 0, 1.04] })}\n                    // onMouseLeave={() => set({ xys: [0, 0, 1] })}\n                    style={{ transform: springProps.xys.interpolate(trans) }}\n                    src={props.item.imgSrc}\n                    alt={props.item.imgSrc}\n                />\n            </div>\n            <div className=\"float-right\">\n                <CardInfo projectTitle={props.item.projectTitle} subTitle={props.item.description} roles={props.item.roles} path={props.item.path} type={props.item.type} />\n            </div>\n        </Link>\n    );\n}\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}