import * as React from "react";
import { Route, RouteId } from "../router/index.js";
/**
 * @internal
 */
export declare type FramerPageLinkTransitionOption = "instant" | "push" | "fade";
/**
 * @internal
 */
export interface FramerPageLinkAttributes {
    transition?: FramerPageLinkTransitionOption;
    element?: string | null;
}
/**
 * @internal
 */
export declare function isFramerPageLink(value: unknown): value is string;
/**
 * @internal
 */
export declare function createFramerPageLink(targetId?: string | null, options?: FramerPageLinkAttributes): string;
/**
 * @internal
 */
export interface PageLinkParsedResult {
    target: string | null;
    element: string | null | undefined;
    attributes: FramerPageLinkAttributes;
}
/**
 * @internal
 */
export declare function parseFramerPageLink(link: unknown): PageLinkParsedResult | undefined;
/**
 * @internal
 */
export declare const enum PageLinkAttribute {
    Page = "data-framer-page-link-target",
    Transition = "data-framer-page-link-transition",
    Element = "data-framer-page-link-element"
}
/**
 * @internal
 */
export declare function replaceFramerPageLinks(rawHTML: string, getRoute: (routeId: RouteId, pathVariables?: Record<string, unknown>) => Route | undefined, currentRouteId: RouteId, pathVariables?: Record<string, unknown>): string;
/**
 * @internal
 */
export declare function useLinkMatchesRoute(link: unknown): boolean;
/** @internal */
export declare const PathVariablesContext: React.Context<Record<string, unknown> | undefined>;
//# sourceMappingURL=framerPageLink.d.ts.map